{"version":3,"sources":["scripts/mobx/shopcar.js","scripts/components/Foot/index.js","scripts/components/AFoot/index.js"],"names":["ShopCar","num","this","carList","forEach","item","count","checked","total","goodInfo","price","flag","observable","action","axios","post","then","res","data","goodId","map","parseInt","goodIdList","push","console","log","filter","computed","foots","txt","path","name","icon","Foot","state","foot","i","key","to","activeClassName","className","text","hot","style","marginLeft","Component","AFoot","connect","tab","getIn","observer","location","hash","replace","props","dispatch","changeTab","localStorage","newTab","bus","on","setState","selectedTab","unselectedTintColor","tintColor","barTintColor","Item","title","width","height","selectedIcon","selected","badge","shopcar","carNum","onPress","history","data-seed","contextTypes","PropTypes","object"],"mappings":"mMAMMA,G,0XAsFE,IAAIC,EAAM,EAIV,OAHAC,KAAKC,QAAQC,QAAQ,SAACC,GAClBJ,GAAgB,EAAXI,EAAKC,QAEPL,I,+BAIP,IAAIA,EAAM,EAMV,OALAC,KAAKC,QAAQC,QAAQ,SAACC,GACfA,EAAKE,UACJN,GAAgB,EAAXI,EAAKC,SAGXL,I,4BAIP,IAAIO,EAAQ,EAOZ,OANAN,KAAKC,QAAQC,QAAQ,SAACC,GACfA,EAAKE,UACJC,GAASH,EAAKC,MAAQD,EAAKI,SAASC,MAAQ,KAI7CF,I,2BAIP,IAAIG,GAAO,EAMX,OALAT,KAAKC,QAAQC,QAAQ,SAACC,GACdA,EAAKE,UACLI,GAAO,KAGRA,M,0CAxHVC,K,wEAAqB,M,wCAIrBC,K,oFAAmB,WAEhBC,IAAMC,KAAK,yBAAyBC,KAAK,SAAAC,GACrC,EAAKd,QAAUc,EAAIC,KAAKf,c,4CAI/BU,K,oFAAsB,SAACM,EAAOZ,GAC3BO,IAAMC,KAAK,wBAAwB,CAC/BI,SACAZ,YACDS,KAAK,SAAAC,GACJ,EAAKd,QAAU,EAAKA,QAAQiB,IAAI,SAACf,GAI7B,OAHGc,GAAQd,EAAKc,SACZd,EAAKE,QAAUA,GAEZF,U,4CAMlBQ,K,oFAAsB,SAACN,GACpBO,IAAMC,KAAK,wBAAwB,CAC/BR,YACDS,KAAK,SAAAC,GACJ,EAAKd,QAAU,EAAKA,QAAQiB,IAAI,SAACf,GAE7B,OADAA,EAAKE,QAAUA,EACRF,U,4CAKlBQ,K,oFAAwB,SAACM,EAAOR,GAE7BG,IAAMC,KAAK,qBAAqB,CAC5BI,SACAR,SACDK,KAAK,SAAAC,MAGR,EAAKd,QAAU,EAAKA,QAAQiB,IAAI,SAAAf,GAI5B,OAHGA,EAAKc,QAAQA,IACZd,EAAKC,OAASK,EAAO,GAAG,GAErBN,Q,8CAIdQ,K,oFAA0B,SAACM,EAAOb,GAC/BQ,IAAMC,KAAK,qBAAqB,CAC5BI,SACAb,UACDU,KAAK,SAAAC,MAGR,EAAKd,QAAU,EAAKA,QAAQiB,IAAI,SAAAf,GAI5B,OAHGA,EAAKc,QAAQA,IACZd,EAAKC,MAASe,SAASf,IAEpBD,Q,wCAIdQ,K,oFAAoB,WAEjB,IAAIS,EAAa,GACjB,EAAKnB,QAAQC,QAAQ,SAACC,GACfA,EAAKE,SACJe,EAAWC,KAAKlB,EAAKc,UAG7BK,QAAQC,IAAIH,GACZR,IAAMC,KAAK,mBAAmB,CAC1BO,eACDN,KAAK,SAAAC,GACJ,EAAKd,QAAW,EAAKA,QAAQuB,OAAO,SAAArB,GAAI,OAAGA,EAAKE,gB,kCAIvDoB,K,uGAQAA,K,sGAUAA,K,kGAWAA,K,oEAaU,QAAI3B,G,uNClIN4B,EAAQ,CACjB,CAACC,IAAI,eAAKC,KAAK,cAAcC,KAAK,OAAOC,KAAK,aAC9C,CAACH,IAAI,eAAKC,KAAK,kBAAkBC,KAAK,WAAWC,KAAK,0BACtD,CAACH,IAAI,qBAAMC,KAAK,cAAcC,KAAK,OAAOC,KAAK,iBAC/C,CAACH,IAAI,SAAIC,KAAK,cAAcC,KAAK,OAAOC,KAAK,kBAK5BC,E,2MAEjBC,MAAQ,CACJN,S,wEAGK,IAEDA,EACA1B,KAAKgC,MADLN,MAGJ,OACG,8BAEQA,EAAMR,IAAI,SAACe,EAAKC,GACZ,OACK,uBAAKC,IAAKD,GACN,gBAAC,IAAD,CAAUE,GAAIH,EAAKL,KAAMS,gBAAgB,cACrC,qBAAGC,UAAW,YAAcL,EAAKH,OACjC,4BAAOG,EAAKN,KACR,GAAHO,GAAM,qBAAOI,UAAU,MAAMC,KAAK,KAAKC,KAAG,EAACC,MAAO,CAAEC,WAAY,e,GApBnEC,I,6SCSbC,EAPpBC,YACG,SAAAb,GAAK,MAAG,CACJc,IAAId,EAAMe,MAAM,CAAC,OAAO,U,GAI/BC,Y,cAEG,aAAc,uE,iFAQV,IACIF,EADOG,SAASC,KACLC,QAAQ,WAAW,IAIlCnD,KAAKoD,MAAMC,SAASC,YAAUR,IAC9BS,aAAaC,OAASV,I,2CAIL,IAAD,OAChBxB,QAAQC,IAAI,SACZkC,IAAIC,GAAG,YAAY,SAACZ,GAChB,EAAKa,SAAS,CACVC,YAAYd,Q,+BAKf,IAAD,OAEAA,EACA9C,KAAKoD,MADLN,IAEJ,OACI,uBAAKR,UAAU,UACX,qBACIuB,oBAAoB,UACpBC,UAAU,UACVC,aAAa,SAITrC,QAAMR,IAAI,SAACe,EAAKC,GACZ,OACI,oBAAQ8B,KAAR,CACAC,MAAOhC,EAAKN,IACZQ,IAAKD,EACLJ,KAAM,qBACFW,MAAO,CAACyB,MAAM,OAAOC,OAAO,QAC5B7B,UAAW,YAAYL,EAAKH,OAGhCsC,aAAc,qBAAG3B,MAAO,CACtByB,MAAO,OACPC,OAAQ,QAEV7B,UAAW,YAAYL,EAAKH,OAG5BuC,SAAUvB,IAAOb,EAAKJ,KACtByC,MAAU,GAAHpC,GAAMqC,IAAQC,OACrBC,QAAS,WAKT,EAAKrB,MAAMC,SAASC,YAAUrB,EAAKJ,OACnC6C,IAAQrD,KAAKY,EAAKL,OAKlB+C,YAAU,kB,GAvEPhC,K,MAoFnCC,EAAMgC,aAAe,CACjBF,QAAQG,IAAUC,S","file":"static/js/20.0b3dc65d.chunk.js","sourcesContent":["\r\n\r\nimport {observable,action,computed,autorun }  from \"mobx\";\r\n\r\nimport {axios} from \"&\"\r\n\r\nclass ShopCar{\r\n    @observable carList = [];\r\n    \r\n\r\n\r\n    @action getCarList= ()=>{\r\n\r\n        axios.post(\"/react/getShopcarInfo\").then(res=>{\r\n            this.carList = res.data.carList;\r\n        })\r\n    }\r\n\r\n    @action changeOneCheck=(goodId,checked)=>{\r\n        axios.post(\"/react/checkOneAndAll\",{\r\n            goodId,\r\n            checked\r\n        }).then(res=>{\r\n            this.carList = this.carList.map((item)=>{\r\n                if(goodId==item.goodId){\r\n                    item.checked = checked;\r\n                }\r\n                return item;\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    @action changeAllCheck=(checked)=>{\r\n        axios.post(\"/react/checkOneAndAll\",{\r\n            checked\r\n        }).then(res=>{\r\n            this.carList = this.carList.map((item)=>{\r\n                item.checked = checked;\r\n                return item;\r\n            })\r\n        })\r\n    }\r\n\r\n    @action changeOneCount = (goodId,flag)=>{\r\n\r\n        axios.post(\"/react/changecount\",{\r\n            goodId,\r\n            flag\r\n        }).then(res=>{\r\n\r\n        })\r\n        this.carList = this.carList.map(item=>{\r\n            if(item.goodId==goodId){\r\n                item.count += flag ? 1:-1;\r\n            }\r\n            return item;\r\n        })\r\n    }\r\n\r\n    @action changeCountByInp = (goodId,count)=>{\r\n        axios.post(\"/react/changecount\",{\r\n            goodId,\r\n            count\r\n        }).then(res=>{\r\n            \r\n        })\r\n        this.carList = this.carList.map(item=>{\r\n            if(item.goodId==goodId){\r\n                item.count  = parseInt(count);\r\n            }\r\n            return item;\r\n        })\r\n    }\r\n\r\n    @action delChecked = ()=>{\r\n        // checked \r\n        var goodIdList = [];\r\n        this.carList.forEach((item)=>{\r\n            if(item.checked){\r\n                goodIdList.push(item.goodId);\r\n            }\r\n        });\r\n        console.log(goodIdList);\r\n        axios.post(\"/react/delSelect\",{\r\n            goodIdList\r\n        }).then(res=>{\r\n            this.carList =  this.carList.filter(item=>!item.checked);\r\n        })\r\n    }\r\n\r\n    @computed get carNum(){\r\n        var num = 0;\r\n        this.carList.forEach((item)=>{\r\n            num+=item.count*1;\r\n        })\r\n        return num;\r\n    }\r\n\r\n    @computed get checkNum(){\r\n        var num = 0;\r\n        this.carList.forEach((item)=>{\r\n            if(item.checked){\r\n                num+=item.count*1;\r\n            }\r\n        })\r\n        return num;\r\n    }\r\n\r\n    @computed get total(){\r\n        var total = 0;\r\n        this.carList.forEach((item)=>{\r\n            if(item.checked){\r\n                total += item.count * item.goodInfo.price * 1;\r\n            }\r\n            \r\n        })\r\n        return total;\r\n    }\r\n\r\n    @computed get quan(){\r\n        var flag = true;   \r\n        this.carList.forEach((item)=>{\r\n            if(!item.checked){\r\n                flag = false;\r\n            }\r\n        })\r\n        return flag;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new ShopCar();\r\n\r\n\r\n\r\n","\r\nimport \"./index.scss\";\r\n\r\nexport const foots = [\r\n    {txt:\"首页\",path:\"/index/home\",name:\"home\",icon:\"icon-home\"},\r\n    {txt:\"分类\",path:\"/index/classify\",name:\"classify\",icon:\"icon-svgclassifyselect\"},\r\n    {txt:\"购物车\",path:\"/index/cart\",name:\"cart\",icon:\"icon-shop_car\"},\r\n    {txt:\"我\",path:\"/index/mine\",name:\"mine\",icon:\"icon-minefill\"}\r\n]\r\n\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {Badge} from \"antd-mobile\"\r\nexport default class Foot extends Component{\r\n\r\n    state = {\r\n        foots\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            foots\r\n        } = this.state;\r\n\r\n        return (\r\n           <footer>\r\n               {\r\n                   foots.map((foot,i)=>{\r\n                       return (\r\n                            <div key={i}>\r\n                                <NavLink  to={foot.path} activeClassName=\"nav-active\">\r\n                                    <i className={\"iconfont \" + foot.icon }></i>\r\n                                    <span>{foot.txt}</span>\r\n                                    {i==2&&<Badge className=\"hot\" text=\"10\" hot style={{ marginLeft: 12 }} />}\r\n                                </NavLink>\r\n                            </div>\r\n                       )\r\n                   })\r\n               }\r\n           </footer>\r\n        )\r\n    }\r\n}","\r\nimport \"./index.scss\";\r\n\r\nimport {TabBar} from \"antd-mobile\";\r\nimport { foots } from \"../Foot\";\r\nimport PropTypes from \"prop-types\";\r\nimport {history}  from \"&/history\";\r\nimport {bus} from \"&\"\r\nimport {connect} from \"react-redux\"\r\nimport { changeTab } from \"../../actions\";\r\nimport shopcar from \"~/mobx/shopcar\"\r\nimport {observer} from \"mobx-react\"\r\n\r\n\r\n@connect(\r\n    state=>({\r\n        tab:state.getIn(['data','tab'])\r\n    })\r\n)\r\n\r\n@observer\r\nexport default class AFoot extends Component{\r\n    constructor(){\r\n        super();\r\n        // this.state = {\r\n        //     selectedTab:\"home\"\r\n        // }\r\n    }\r\n\r\n    componentDidMount(){\r\n        var hash = location.hash;\r\n        var tab = hash.replace(\"#/index/\",\"\");\r\n        // this.setState({\r\n        //     selectedTab:tab\r\n        // });\r\n        this.props.dispatch(changeTab(tab));\r\n        localStorage.newTab = tab;\r\n    }\r\n\r\n\r\n    componentWillMount(){\r\n        console.log(\"12212\");\r\n        bus.on(\"changeTab\",(tab)=>{\r\n            this.setState({\r\n                selectedTab:tab\r\n            });\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            tab \r\n        } = this.props;\r\n        return (\r\n            <div className=\"myfoot\">\r\n                <TabBar\r\n                    unselectedTintColor=\"#949494\"\r\n                    tintColor=\"#33A3F4\"\r\n                    barTintColor=\"white\"\r\n                    \r\n                    >\r\n                    {\r\n                        foots.map((foot,i)=>{\r\n                            return (\r\n                                <TabBar.Item\r\n                                title={foot.txt}\r\n                                key={i}\r\n                                icon={<i \r\n                                    style={{width:'22px',height:'22px'}}\r\n                                    className={\"iconfont \"+foot.icon}\r\n                                />\r\n                                }\r\n                                selectedIcon={<i style={{\r\n                                  width: '22px',\r\n                                  height: '22px',\r\n                                }}\r\n                                className={\"iconfont \"+foot.icon}\r\n                                />\r\n                                }\r\n                                selected={tab ===foot.name}\r\n                                badge={i==2&&shopcar.carNum}\r\n                                onPress={() => {\r\n                                    // 点击设置高亮 \r\n                                //   this.setState({\r\n                                //     selectedTab: foot.name,\r\n                                //   });\r\n                                this.props.dispatch(changeTab(foot.name));\r\n                                history.push(foot.path);\r\n                                //   this.props.history.push(foot.path);\r\n                                // this.context.history.push(foot.path);\r\n                                  \r\n                                }}\r\n                                data-seed=\"logId\"\r\n                              >\r\n                                {/* <div>wuhan1906 --- {foot.txt} </div> */}\r\n                              </TabBar.Item>\r\n                            )\r\n                        })\r\n                    }\r\n                </TabBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAFoot.contextTypes = {\r\n    history:PropTypes.object\r\n}"],"sourceRoot":""}