{"version":3,"sources":["scripts/views/app/index.js","scripts/components/Afoot/index.js","scripts/views/guide/index.js","utils/lazyload.js","assets/images/guide.png","App.js","serviceWorker.js","scripts/reducers/data.js","scripts/reducers/index.js","store.js","index.js","utils/axios.js","utils/index.js","scripts/actions/index.js","utils/history.js","scripts/index.js","scripts/views/index.js"],"names":["Index","path","component","LazyLoad","render","to","Component","foots","txt","name","icon","iconSelected","AFoot","state","selectedTab","tab","location","hash","replace","this","setState","className","unselectedTintColor","tintColor","barTintColor","map","foot","i","Item","key","style","width","height","fontSize","selectedIcon","selected","onPress","history","push","data-seed","Guide","gotoHome","img","require","src","alt","onClick","loadingComponent","loader","loading","Loadable","module","exports","App","Boolean","window","hostname","match","defaulState","immutable","fromJS","banner","word","typeList","touxiang","isShuqian","sNum","isXihuan","xNum","reducers","combineReducers","data","action","type","GETWORD","set","GETDETAIL","GETTYPELIST","GETCONLLECT","merge","GETWORDLIKE","CHANGECONLLECT","CHANGEWORDLIKE","store","createStore","applyMiddleware","thunk","promise","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","axios","defaults","baseURL","failToast","msg","hide","headers","common","post","interceptors","request","use","config","console","log","sessionStorage","token","error","Promise","reject","response","setTimeout","info","getWord","a","url","res","result","getDetail","params","get","getTypeList","getConllect","cType","getWordLike","changeConllect","changeWordLike","createHashHistory","MainRouter","basename","Layout","exact"],"mappings":"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","file":"static/js/main.816bc327.chunk.js","sourcesContent":["import \"./index.scss\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport LazyLoad from \"&/lazyload\";\r\nimport AFoot from \"~/components/Afoot\"\r\nexport class Index extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          <Route\r\n            path=\"/index/home\"\r\n            component={LazyLoad(() => import(\"../home\"))}\r\n          />\r\n          <Route\r\n            path=\"/index/discuss\"\r\n            component={LazyLoad(() => import(\"../discuss\"))}\r\n          />\r\n          <Route\r\n            path=\"/index/advices\"\r\n            component={LazyLoad(() => import(\"../advices\"))}\r\n          />\r\n          <Route\r\n            path=\"/index/mine\"\r\n            component={LazyLoad(() => import(\"../mine\"))}\r\n          />\r\n          <Route render={() => <Redirect to=\"/index/home\" />} />\r\n        </Switch>\r\n        <AFoot />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./index.scss\";\r\nimport { history } from \"&/history\";\r\nimport { TabBar } from \"antd-mobile\";\r\nexport const foots = [\r\n  {\r\n    txt: \"首页\",\r\n    path: \"/index/home\",\r\n    name: \"home\",\r\n    icon: \"icon-Homehomepagemenu\",\r\n    iconSelected: \"icon-Homehomepagemenu1\"\r\n  },\r\n  {\r\n    txt: \"讨论\",\r\n    path: \"/index/discuss\",\r\n    name: \"discuss\",\r\n    icon: \"icon-sousuo\",\r\n    iconSelected: \"icon-wendashoujibanICON-\"\r\n  },\r\n  {\r\n    txt: \"消息\",\r\n    path: \"/index/advices\",\r\n    name: \"advices\",\r\n    icon: \"icon-msg\",\r\n    iconSelected: \"icon-xiaoxi\"\r\n  },\r\n  {\r\n    txt: \"我的\",\r\n    path: \"/index/mine\",\r\n    name: \"mine\",\r\n    icon: \"icon-wode\",\r\n    iconSelected: \"icon-wodecopy\"\r\n  }\r\n];\r\n\r\nexport default class AFoot extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectedTab: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    var hash = location.hash;\r\n    var tab = hash.replace(\"#/index/\", \"\");\r\n    this.setState({\r\n      selectedTab: tab\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"my-foot\">\r\n        <TabBar\r\n          unselectedTintColor=\"#949494\"\r\n          tintColor=\"#333333\"\r\n          barTintColor=\"white\"\r\n        >\r\n          {foots.map((foot, i) => {\r\n            return (\r\n              <TabBar.Item\r\n                key={i}\r\n                icon={\r\n                  <i\r\n                    style={{\r\n                      width: \"22px\",\r\n                      height: \"22px\",\r\n                      fontSize: \"0.4rem\"\r\n                    }}\r\n                    className={\"iconfont \" + foot.icon}\r\n                  />\r\n                }\r\n                selectedIcon={\r\n                  <i\r\n                    style={{\r\n                      width: \"22px\",\r\n                      height: \"22px\",\r\n                      fontSize: \"0.4rem\"\r\n                    }}\r\n                    className={\"iconfont \" + foot.iconSelected}\r\n                  />\r\n                }\r\n                selected={this.state.selectedTab === foot.name}\r\n                // badge={1}\r\n                onPress={() => {\r\n                  // 点击设置高亮\r\n                  this.setState({\r\n                    selectedTab: foot.name\r\n                  });\r\n                  history.push(foot.path);\r\n                }}\r\n                data-seed=\"logId\"\r\n              ></TabBar.Item>\r\n            );\r\n          })}\r\n        </TabBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./index.scss\";\r\nimport {history} from \"&/history\"\r\nlet timer ='';\r\nexport class Guide extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      img: require(\"@/assets/images/guide.png\")\r\n    };\r\n  }\r\n  gotoHome=()=>{\r\n    history.push(\"/index\")\r\n  }\r\n  componentDidMount(){\r\n\r\n  }\r\n  render() {\r\n    const { img } = this.state;\r\n    return (\r\n      <div className=\"guide\">\r\n        <img src={img} alt=\"\" className=\"g-img\" onClick={this.gotoHome} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Loadable from \"react-loadable\";\r\n\r\n//通用的过场组件\r\nconst loadingComponent = () => {\r\n  return <div>loading</div>;\r\n};\r\n\r\n//过场组件默认采用通用的，若传入了loading，则采用传入的过场组件\r\nexport default (loader, loading = loadingComponent) => {\r\n  return Loadable({\r\n    loader, // 需要懒加载的组件\r\n    loading\r\n  });\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/guide.9e68aea0.png\";","import React from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport { MainRouter } from \"./scripts\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import immutable from \"immutable\";\r\nimport {\r\n  GETWORD,\r\n  GETDETAIL,\r\n  GETTYPELIST,\r\n  GETCONLLECT,\r\n  CHANGECONLLECT,\r\n  GETWORDLIKE,\r\n  CHANGEWORDLIKE\r\n} from \"../actions\";\r\n\r\nconst defaulState = immutable.fromJS({\r\n  banner: [],\r\n  word: {},\r\n  typeList: [],\r\n  touxiang: \"\",\r\n  isShuqian: false,\r\n  sNum: 0,\r\n  isXihuan:false,\r\n  xNum:0\r\n});\r\n\r\nexport const data = (state = defaulState, action) => {\r\n  switch (action.type) {\r\n    case GETWORD:\r\n      return state.set(\"banner\", action.banner);\r\n      break;\r\n    case GETDETAIL:\r\n      return state.set(\"word\", action.word);\r\n      break;\r\n    case GETTYPELIST:\r\n      return state.set(\"typeList\", action.typeList);\r\n      break;\r\n    case GETCONLLECT:\r\n      return state.merge({ \"isShuqian\": action.isShuqian, \"sNum\": action.sNum });\r\n      break;\r\n    case GETWORDLIKE:\r\n      return state.merge({ \"isXihuan\": action.isXihuan, \"xNum\": action.xNum });\r\n      break;\r\n    case CHANGECONLLECT:\r\n      return state.merge({ \"isShuqian\": action.isShuqian, \"sNum\": action.sNum });\r\n      break;\r\n    case CHANGEWORDLIKE:\r\n      return state.merge({ \"isXihuan\": action.isXihuan, \"xNum\": action.xNum });     \r\n      break;\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux-immutable\";\r\nimport { data } from \"./data\";\r\n\r\nexport const reducers = combineReducers({\r\n  data: data\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { reducers } from \"./scripts/reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport promise from \"redux-promise\";\r\nconst store = createStore(reducers, applyMiddleware(thunk, promise));\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/index.scss\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://peng47.com:1907/\"; // 基路径\r\nlet token = \"\";\r\naxios.defaults.headers.common[\"token\"] = token; // token\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\n\r\nimport { Toast } from \"antd-mobile\";\r\n\r\nexport function loadingToast(msg) {\r\n  Toast.hide();\r\n  Toast.loading(msg, 1, () => {\r\n    console.log(\"正在请求中...\");\r\n  });\r\n}\r\n\r\nexport function failToast(msg) {\r\n  Toast.hide();\r\n  Toast.loading(msg, 1);\r\n}\r\n\r\nexport function showToast(msg) {\r\n  Toast.hide();\r\n  Toast.info(msg, 1);\r\n}\r\n// 拦截器配置    Interceptors\r\n// 发送请求之前 添加拦截器\r\naxios.interceptors.request.use(\r\n  function(config) {\r\n    // 发送之前做的事情\r\n    loadingToast(\"请求中\");\r\n    config.headers[\"token\"] = sessionStorage.token;\r\n\r\n    return config;\r\n  },\r\n  function(error) {\r\n    // 发送失败 做的失败\r\n    failToast(\"请求失败\");\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 响应数据 的拦截器\r\naxios.interceptors.response.use(\r\n  function(response) {\r\n    // 成功接收到数据\r\n    console.log(response);\r\n    setTimeout(() => {\r\n      showToast(response.data.msg);\r\n    }, 500);\r\n    return response;\r\n  },\r\n  function(error) {\r\n    failToast(\"响应失败\");\r\n    // 无法接收到数据\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport { axios };\r\n","\r\n\r\nexport {axios} from \"./axios\"","import { axios } from \"&\";\r\n\r\nexport const GETWORD = \"getWord\";\r\nexport async function getWord({ url }) {\r\n  let res = await axios.post(url);\r\n  return {\r\n    type: GETWORD,\r\n    banner: res.data.result\r\n  };\r\n}\r\n\r\nexport const GETDETAIL = \"getDetail\";\r\nexport async function getDetail({ url, params }) {\r\n  let res = await axios.get(url, { params });\r\n  return {\r\n    type: GETDETAIL,\r\n    word: res.data.result\r\n  };\r\n}\r\n\r\nexport const GETTYPELIST = \"getTypeList\";\r\nexport async function getTypeList({ url, params }) {\r\n  let res = await axios.get(url);\r\n  return {\r\n    type: GETTYPELIST,\r\n    typeList: res.data.result\r\n  };\r\n}\r\nexport const GETCONLLECT = \"getConllect\";\r\nexport async function getConllect(url,data){\r\n  let res = await axios.post(url,data);\r\n  return {\r\n    type: GETCONLLECT,\r\n    isShuqian: res.data.cType ? true : false,\r\n    sNum:res.data.sNum\r\n  }\r\n}\r\nexport const GETWORDLIKE = \"getWordLike\";\r\nexport async function getWordLike(url,data){\r\n  let res = await axios.post(url,data);\r\n  return {\r\n    type: GETWORDLIKE,\r\n    isXihuan: res.data.cType ? true : false,\r\n    xNum:res.data.xNum\r\n  }\r\n}\r\nexport const CHANGECONLLECT = \"changeConllect\";\r\nexport async function changeConllect(url, data) {\r\n  let res = await axios.post(url, data);\r\n  return {\r\n    type: CHANGECONLLECT,\r\n    isShuqian: res.data.cType ? true : false,\r\n    sNum:res.data.sNum\r\n  };\r\n}\r\nexport const CHANGEWORDLIKE = \"changeWordLike\";\r\nexport async function changeWordLike(url,data){\r\n  let res = await axios.post(url,data);\r\n  return {\r\n    type: CHANGEWORDLIKE,\r\n    isXihuan: res.data.cType ? true : false,\r\n    xNum:res.data.xNum\r\n  }\r\n}\r\n","import { createHashHistory, createBrowserHistory } from \"history\";\r\n\r\nconst history = new createHashHistory();\r\n\r\nexport { history };\r\n","import { HashRouter, Route } from \"react-router-dom\";\r\nimport { Layout } from \"./views\";\r\n\r\nexport class MainRouter extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n        <Route component={Layout} />\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n","import LazyLoad from \"&/lazyload\";\r\nimport { Switch, Redirect, Route } from \"react-router-dom\";\r\nimport { Index } from \"./app\";\r\nimport { Guide } from \"./guide\";\r\n\r\nexport class Layout extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <Switch>\r\n          <Route path=\"/\" exact render={() => <Redirect to=\"/guide\" />}></Route>\r\n          <Route path=\"/guide\" component={Guide}></Route>\r\n          <Route path=\"/index\" component={Index}></Route>\r\n          <Route\r\n            path=\"/login\"\r\n            component={LazyLoad(() => import(\"./login\"))}\r\n          ></Route>\r\n          <Route\r\n            path=\"/search\"\r\n            component={LazyLoad(() => import(\"./search\"))}\r\n          ></Route>\r\n          <Route\r\n            path=\"/fit\"\r\n            component={LazyLoad(() => import(\"./fit\"))}\r\n          ></Route>\r\n          <Route\r\n            path=\"/ilike\"\r\n            component={LazyLoad(() => import(\"./ilike\"))}\r\n          ></Route>\r\n          <Route\r\n            path=\"/iconllect\"\r\n            component={LazyLoad(() => import(\"./iconllect\"))}\r\n          ></Route>\r\n          <Route\r\n            path=\"/detail/:wordId\"\r\n            component={LazyLoad(() => import(\"./detail\"))}\r\n          ></Route>\r\n          <Route\r\n            path=\"/talkabout/:wordId\"\r\n            component={LazyLoad(() => import(\"./talkabout\"))}\r\n          ></Route>\r\n          <Route render={() => <Redirect to=\"/index/home\" />} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}